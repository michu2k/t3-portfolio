name: Build Next.js project

on: pull_request

jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}

      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}

      GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}

      AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
      AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}
      AWS_S3_ACCESS_KEY: ${{ secrets.AWS_S3_ACCESS_KEY }}
      AWS_S3_SECRET_ACCESS_KEY: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}

      ALLOWED_EMAIL_ADDRESSES: ${{ secrets.ALLOWED_EMAIL_ADDRESSES }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-next-js-${{ hashFiles('**/pnpm-lock.yaml') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-next-js-${{ hashFiles('**/pnpm-lock.yaml') }}-
            ${{ runner.os }}-next-js-

      - name: Install dependencies
        run: pnpm install

      - name: Check ESLint errors
        run: pnpm run lint:check

      - name: Check Prettier errors
        run: pnpm run prettier:check

      - name: Build
        run: pnpm run build
